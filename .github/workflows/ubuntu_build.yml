name: Linux
on: [pull_request, workflow_dispatch]

jobs:
  #---LINUX BUILD JOB(S)---
  linux:
    name: ${{ matrix.config.name }}
    runs-on: ubuntu-latest
    container: ubuntu:20.04
    env:
      DEBIAN_FRONTEND: "noninteractive"
      oclus_build_type: "Release"
      oclus_conan_path: "$HOME/.local/bin"
    strategy:
      fail-fast: false
      matrix:
        config:
          - {
            name: "Ubuntu GCC",
            cc: "gcc", cxx: "g++",
          }

    steps:
      - name: Update environment
        shell: bash
        run: |
          # Update package lists
          apt update -qq
          # Install build tools
          apt install -y \
            clang \
            cmake \
            curl \
            lld \
            ninja-build \
            pkg-config \
            python3 \
            python3-pip \
            git \
            git-lfs \
            libgtk2.0-dev \
            libva-dev \
            libvdpau-dev \
            sudo

          pip3 install wheel setuptools
          pip3 install conan mako

      #Checks out the repo
      - name: Checkout
        uses: actions/checkout@v2

      - name: Library - setup Conan and pull packages
        shell: bash
        run : |
          conan profile new default --detect
          conan profile update settings.compiler.libcxx=libstdc++11 default
          conan profile show default
          conan remote list

          cd library
          mkdir build
          cd build
          conan install ../conan --build=missing -s build_type=${{ env.oclus_build_type }}

      - name: Library - configure CMake
        shell: bash
        run: |
          export CC=${{ matrix.config.cc }}
          export CXX=${{ matrix.config.cxx }}
          export PATH="${{ env.oclus_conan_path }}":$PATH

          # Configure cmake
          cd library
          cd build
          echo "Current directory: $(pwd)"
          cmake .. \
            -DCMAKE_BUILD_TYPE=${{ env.oclus_build_type }} \
            -GNinja \
            ${{ matrix.config.cmake_configure_options }}

      - name: Library - build
        shell: bash
        run: |
          cmake --build library/build

      - name: Library - run tests
        shell: bash
        run: |
          cd library
          cd build
          ctest --verbose -C ${{ env.oclus_build_type }}

